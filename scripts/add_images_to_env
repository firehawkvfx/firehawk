#!/bin/bash

set -e

export TF_VAR_ami_commit_hash="$(cd $TF_VAR_firehawk_ami_path; git rev-parse HEAD)"
echo "export TF_VAR_ami_commit_hash=$TF_VAR_ami_commit_hash" 2>&1 | tee --append $SCRIPTDIR/../env_vars.sh

# output image id's
# These ami's are required for a full deployment
# AMI query by commit - Vault and Consul Server
ami_role="firehawk_ubuntu18_vault_consul_server_ami"
export TF_VAR_vault_consul_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_vault_consul_ami_id" "TF_VAR_vault_consul_ami_id"
# AMI query by commit - Vault and Consul Client
ami_role="firehawk_centos7_ami"
export TF_VAR_vault_client_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_vault_client_ami_id" "TF_VAR_vault_client_ami_id"
# AMI query by commit - Bastion Host
ami_role="firehawk_centos7_ami"
export TF_VAR_bastion_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_bastion_ami_id" "TF_VAR_bastion_ami_id"
# AMI query by commit - Open VPN Server
ami_role="firehawk_openvpn_server_ami"
export TF_VAR_openvpn_server_ami=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_openvpn_server_ami" "TF_VAR_openvpn_server_ami"
# AMI query by commit - Deadline DB
ami_role="firehawk_deadlinedb_ami"
export TF_VAR_deadline_db_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_deadline_db_ami_id" "TF_VAR_deadline_db_ami_id"
# AMI query by commit - Render node
ami_role="firehawk_centos7_rendernode_ami"
export TF_VAR_node_centos7_houdini_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_node_centos7_houdini_ami_id" "TF_VAR_node_centos7_houdini_ami_id"
# AMI query by commit - Workstation
ami_role="firehawk_amazonlinux2_ami"
export TF_VAR_provisioner_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
output_ami_var "$ami_role" "$TF_VAR_provisioner_ami_id" "TF_VAR_provisioner_ami_id"
# # AMI query by commit - Workstation
# ami_role="firehawk_amazonlinux2_nicedcv_ami"
# export TF_VAR_workstation_amazonlinux2_nicedcv_ami_id=$(retrieve_ami $latest_ami $ami_role $TF_VAR_ami_commit_hash)
# output_ami_var "$ami_role" "$TF_VAR_workstation_amazonlinux2_nicedcv_ami_id" "TF_VAR_workstation_amazonlinux2_nicedcv_ami_id"

if [[ "$success" == "false" ]]; then
  echo "ERROR: Cannot depoloy without all images."
  exit 1
fi