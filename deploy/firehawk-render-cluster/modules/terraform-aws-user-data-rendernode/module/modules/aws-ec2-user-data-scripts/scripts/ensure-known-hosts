#!/bin/bash

# Log the given message. All logs are written to stderr with a timestamp.
function log {
  local -r message="$1"
  local -r timestamp=$(date +"%Y-%m-%d %H:%M:%S")
  >&2 echo -e "$timestamp $message"
}

function ensure_known_hosts {
  local -r ssh_known_hosts_path="$1"
  local -r aws_external_domain="$2"
  local -r key="$3"

  if test ! -f $ssh_known_hosts_path; then
      log "Creating $ssh_known_hosts_path"
      touch $ssh_known_hosts_path # ensure known hosts file exists
  fi
  if [[ "$OSTYPE" == "darwin"* ]]; then # Acquire file permissions.
      octal_permissions=$(stat -f %A "$ssh_known_hosts_path" | rev | sed -E 's/^([[:digit:]]{4})([^[:space:]]+)/\1/' | rev ) # clip to 4 zeroes
  else
      octal_permissions=$(stat --format '%a' "$ssh_known_hosts_path" | rev | sed -E 's/^([[:digit:]]{4})([^[:space:]]+)/\1/' | rev) # clip to 4 zeroes
  fi
  octal_permissions=$( python3 -c "print( \"$octal_permissions\".zfill(4) )" ) # pad to 4 zeroes
  log "$ssh_known_hosts_path octal_permissions currently $octal_permissions."
  if [[ "$octal_permissions" != "0644" ]]; then
      log "...Setting to 0644"
      chmod 0644 $ssh_known_hosts_path
  fi
  if [[ -z "$aws_external_domain" ]]; then
    # aws_external_domain var is empty, this must be an internal host, so we dont intend for this to connect to external hosts except by their internal DNS name
    grep -q "^@cert-authority \*\.consul" $ssh_known_hosts_path || echo "@cert-authority *.consul" | tee --append $ssh_known_hosts_path
    sed -i "s#@cert-authority \*\.consul.*#@cert-authority *.consul $key#g" $ssh_known_hosts_path
  else
    grep -q "^@cert-authority \*\.consul,\*\.$aws_external_domain" $ssh_known_hosts_path || echo "@cert-authority *.consul,*.$aws_external_domain" | tee --append $ssh_known_hosts_path
    sed -i "s#@cert-authority \*\.consul,\*\.$aws_external_domain.*#@cert-authority *.consul,*.$aws_external_domain $key#g" $ssh_known_hosts_path
  fi
  ls -ltriah $ssh_known_hosts_path
  log "Added CA to $ssh_known_hosts_path."
}

ensure_known_hosts "$@"