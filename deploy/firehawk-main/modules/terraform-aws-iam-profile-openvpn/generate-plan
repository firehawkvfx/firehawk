#!/bin/bash
set -e

exit_if_error() {
  local exit_code=$1
  shift
  [[ $exit_code ]] &&               # do nothing if no error code passed
    ((exit_code != 0)) && {         # do nothing if error code is 0
      printf 'ERROR: %s\n' "$@" >&2 # we can use better logging here
      exit "$exit_code"             # we could also check to make sure
                                    # error code is numeric when passed
    }
}

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # The directory of this script
# Raise error if var isn't defined.
if [[ -z "$TF_VAR_vpcname" ]]; then
    exit_if_error 1 "TF_VAR_vpcname not defined."
fi
if [[ -z "$TF_VAR_resourcetier" ]]; then
    exit_if_error 1 "TF_VAR_resourcetier not defined."
fi
if [[ -z "$AWS_DEFAULT_REGION" ]]; then
    exit_if_error 1 "AWS_DEFAULT_REGION not defined."
fi
if [[ -z "$TF_VAR_bucket_extension" ]]; then
    exit_if_error 1 "TF_VAR_bucket_extension not defined."
fi
# init the s3 backend if it doesn't exist.
# Warning, namespace is hardcoded for awareness and preventing duplicates (instead of using something like this directory name, since the state is read elsewhere)
terraform init \
    -input=false \
    -backend-config="bucket=state.terraform.$TF_VAR_bucket_extension" \
    -backend-config="key=$TF_VAR_resourcetier/$TF_VAR_vpcname-terraform-aws-iam-profile-openvpn/terraform.tfstate" \
    -backend-config="region=$AWS_DEFAULT_REGION" \
    -backend-config="dynamodb_table=locks.state.terraform.$TF_VAR_bucket_extension"
terraform plan -out=tfplan -input=false